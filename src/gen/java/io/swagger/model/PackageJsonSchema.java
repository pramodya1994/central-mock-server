/*
 * Ballerina Central API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.ModuleJsonSchema;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * PackageJsonSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2020-10-19T18:38:01.167111+05:30[Asia/Colombo]")public class PackageJsonSchema   {
  @JsonProperty("organization")
  private String organization = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("platform")
  private String platform = null;

  @JsonProperty("languageSpecificationVersion")
  private String languageSpecificationVersion = null;

  @JsonProperty("URL")
  private String URL = null;

  @JsonProperty("baloVersion")
  private String baloVersion = null;

  @JsonProperty("baloURL")
  private String baloURL = null;

  @JsonProperty("readme")
  private String readme = null;

  @JsonProperty("template")
  private Boolean template = null;

  @JsonProperty("licenses")
  private List<String> licenses = new ArrayList<String>();

  @JsonProperty("authors")
  private List<String> authors = new ArrayList<String>();

  @JsonProperty("sourceCodeLocation")
  private String sourceCodeLocation = null;

  @JsonProperty("keywords")
  private List<String> keywords = new ArrayList<String>();

  @JsonProperty("ballerinaVersion")
  private String ballerinaVersion = null;

  @JsonProperty("createdDate")
  private Integer createdDate = null;

  @JsonProperty("modules")
  private List<ModuleJsonSchema> modules = new ArrayList<ModuleJsonSchema>();

  public PackageJsonSchema organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   **/
  @JsonProperty("organization")
  @Schema(required = true, description = "")
  @NotNull
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public PackageJsonSchema name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @Schema(required = true, description = "")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PackageJsonSchema version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   **/
  @JsonProperty("version")
  @Schema(required = true, description = "")
  @NotNull
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public PackageJsonSchema platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   **/
  @JsonProperty("platform")
  @Schema(required = true, description = "")
  @NotNull
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public PackageJsonSchema languageSpecificationVersion(String languageSpecificationVersion) {
    this.languageSpecificationVersion = languageSpecificationVersion;
    return this;
  }

  /**
   * Get languageSpecificationVersion
   * @return languageSpecificationVersion
   **/
  @JsonProperty("languageSpecificationVersion")
  @Schema(required = true, description = "")
  @NotNull
  public String getLanguageSpecificationVersion() {
    return languageSpecificationVersion;
  }

  public void setLanguageSpecificationVersion(String languageSpecificationVersion) {
    this.languageSpecificationVersion = languageSpecificationVersion;
  }

  public PackageJsonSchema URL(String URL) {
    this.URL = URL;
    return this;
  }

  /**
   * Get URL
   * @return URL
   **/
  @JsonProperty("URL")
  @Schema(description = "")
  public String getURL() {
    return URL;
  }

  public void setURL(String URL) {
    this.URL = URL;
  }

  public PackageJsonSchema baloVersion(String baloVersion) {
    this.baloVersion = baloVersion;
    return this;
  }

  /**
   * Get baloVersion
   * @return baloVersion
   **/
  @JsonProperty("baloVersion")
  @Schema(required = true, description = "")
  @NotNull
  public String getBaloVersion() {
    return baloVersion;
  }

  public void setBaloVersion(String baloVersion) {
    this.baloVersion = baloVersion;
  }

  public PackageJsonSchema baloURL(String baloURL) {
    this.baloURL = baloURL;
    return this;
  }

  /**
   * Location of the module&#x27;s .balo file
   * @return baloURL
   **/
  @JsonProperty("baloURL")
  @Schema(required = true, description = "Location of the module's .balo file")
  @NotNull
  public String getBaloURL() {
    return baloURL;
  }

  public void setBaloURL(String baloURL) {
    this.baloURL = baloURL;
  }

  public PackageJsonSchema readme(String readme) {
    this.readme = readme;
    return this;
  }

  /**
   * Get readme
   * @return readme
   **/
  @JsonProperty("readme")
  @Schema(description = "")
  public String getReadme() {
    return readme;
  }

  public void setReadme(String readme) {
    this.readme = readme;
  }

  public PackageJsonSchema template(Boolean template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   **/
  @JsonProperty("template")
  @Schema(required = true, description = "")
  @NotNull
  public Boolean isTemplate() {
    return template;
  }

  public void setTemplate(Boolean template) {
    this.template = template;
  }

  public PackageJsonSchema licenses(List<String> licenses) {
    this.licenses = licenses;
    return this;
  }

  public PackageJsonSchema addLicensesItem(String licensesItem) {
    this.licenses.add(licensesItem);
    return this;
  }

  /**
   * Get licenses
   * @return licenses
   **/
  @JsonProperty("licenses")
  @Schema(required = true, description = "")
  @NotNull
  public List<String> getLicenses() {
    return licenses;
  }

  public void setLicenses(List<String> licenses) {
    this.licenses = licenses;
  }

  public PackageJsonSchema authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public PackageJsonSchema addAuthorsItem(String authorsItem) {
    this.authors.add(authorsItem);
    return this;
  }

  /**
   * Get authors
   * @return authors
   **/
  @JsonProperty("authors")
  @Schema(required = true, description = "")
  @NotNull
  public List<String> getAuthors() {
    return authors;
  }

  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }

  public PackageJsonSchema sourceCodeLocation(String sourceCodeLocation) {
    this.sourceCodeLocation = sourceCodeLocation;
    return this;
  }

  /**
   * Source code location
   * @return sourceCodeLocation
   **/
  @JsonProperty("sourceCodeLocation")
  @Schema(description = "Source code location")
  public String getSourceCodeLocation() {
    return sourceCodeLocation;
  }

  public void setSourceCodeLocation(String sourceCodeLocation) {
    this.sourceCodeLocation = sourceCodeLocation;
  }

  public PackageJsonSchema keywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public PackageJsonSchema addKeywordsItem(String keywordsItem) {
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   **/
  @JsonProperty("keywords")
  @Schema(required = true, description = "")
  @NotNull
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }

  public PackageJsonSchema ballerinaVersion(String ballerinaVersion) {
    this.ballerinaVersion = ballerinaVersion;
    return this;
  }

  /**
   * Get ballerinaVersion
   * @return ballerinaVersion
   **/
  @JsonProperty("ballerinaVersion")
  @Schema(required = true, description = "")
  @NotNull
  public String getBallerinaVersion() {
    return ballerinaVersion;
  }

  public void setBallerinaVersion(String ballerinaVersion) {
    this.ballerinaVersion = ballerinaVersion;
  }

  public PackageJsonSchema createdDate(Integer createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   **/
  @JsonProperty("createdDate")
  @Schema(required = true, description = "")
  @NotNull
  public Integer getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Integer createdDate) {
    this.createdDate = createdDate;
  }

  public PackageJsonSchema modules(List<ModuleJsonSchema> modules) {
    this.modules = modules;
    return this;
  }

  public PackageJsonSchema addModulesItem(ModuleJsonSchema modulesItem) {
    this.modules.add(modulesItem);
    return this;
  }

  /**
   * Get modules
   * @return modules
   **/
  @JsonProperty("modules")
  @Schema(required = true, description = "")
  @NotNull
  public List<ModuleJsonSchema> getModules() {
    return modules;
  }

  public void setModules(List<ModuleJsonSchema> modules) {
    this.modules = modules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageJsonSchema packageJsonSchema = (PackageJsonSchema) o;
    return Objects.equals(this.organization, packageJsonSchema.organization) &&
        Objects.equals(this.name, packageJsonSchema.name) &&
        Objects.equals(this.version, packageJsonSchema.version) &&
        Objects.equals(this.platform, packageJsonSchema.platform) &&
        Objects.equals(this.languageSpecificationVersion, packageJsonSchema.languageSpecificationVersion) &&
        Objects.equals(this.URL, packageJsonSchema.URL) &&
        Objects.equals(this.baloVersion, packageJsonSchema.baloVersion) &&
        Objects.equals(this.baloURL, packageJsonSchema.baloURL) &&
        Objects.equals(this.readme, packageJsonSchema.readme) &&
        Objects.equals(this.template, packageJsonSchema.template) &&
        Objects.equals(this.licenses, packageJsonSchema.licenses) &&
        Objects.equals(this.authors, packageJsonSchema.authors) &&
        Objects.equals(this.sourceCodeLocation, packageJsonSchema.sourceCodeLocation) &&
        Objects.equals(this.keywords, packageJsonSchema.keywords) &&
        Objects.equals(this.ballerinaVersion, packageJsonSchema.ballerinaVersion) &&
        Objects.equals(this.createdDate, packageJsonSchema.createdDate) &&
        Objects.equals(this.modules, packageJsonSchema.modules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organization, name, version, platform, languageSpecificationVersion, URL, baloVersion, baloURL, readme, template, licenses, authors, sourceCodeLocation, keywords, ballerinaVersion, createdDate, modules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageJsonSchema {\n");
    
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    languageSpecificationVersion: ").append(toIndentedString(languageSpecificationVersion)).append("\n");
    sb.append("    URL: ").append(toIndentedString(URL)).append("\n");
    sb.append("    baloVersion: ").append(toIndentedString(baloVersion)).append("\n");
    sb.append("    baloURL: ").append(toIndentedString(baloURL)).append("\n");
    sb.append("    readme: ").append(toIndentedString(readme)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    licenses: ").append(toIndentedString(licenses)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    sourceCodeLocation: ").append(toIndentedString(sourceCodeLocation)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    ballerinaVersion: ").append(toIndentedString(ballerinaVersion)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
